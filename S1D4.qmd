---
title: "S1D4"
author: "NM"
format: html
editor_options: 
  chunk_output_type: console
---

```{r}
f_pre <- c("temp", "pH", "salinity")
f_suf <- c(1,2,3,4,5)

for(i in seq_along(f_pre)){
  for(j in seq_along(f_suf)){
    print(paste0(f_pre[i],"_",f_suf[j]))
    }
}
```


```{r}
evens <- c(0,2,4,6,8)
odds <- c(1,3,5,7)

for(i in evens){
  for(j in odds){
    print(paste(i,j))
  }
}
```


```{r}
age_fx <- function(age){
  age_new <- age + 15
  return(age_new)
}

exclaim <- function(age_new){
  print(paste("I wil be",age_new,"years old in 15 years."))
}

exclaim(age_fx(500))


```


```{r}

doubleit <- function(x){
  r = 2*x
  return(r)
}

doubleit(4)

```


```{r}

q_splits <- c(1.0, 1.1, 1.2, 1.1, 1.4,1.5, 1.6, 1.4)
class(1)

for(i in 1:((length(q_splits) - 1))){
  qs = q_splits[i] + q_splits[i+1]
  return(qs)
}
```

#f(x) with conditions
```{r}

ani_age <- function(animal,agea){
  
  if (!animal %in% c("dog", "goat")) {
    stop("Oops! Animal must be a dog or a goat.")
  }
  if (is.numeric(age) == FALSE) {
    stop("The age must be a number between 0 and 100")
  }
  if (age <= 0) {
    stop("Age must be a number greater than zero.")
  }
  
  if(animal == "dog"){
    print(agea*7)
  }else if(animal == "goat"){
    print(agea*4.7)
  }else
    print("Try another animal - I like dogs and goats :)")
}

ani_age("goat",3)
ani_age("mouse",5)
ani_age("dog",4)
```

```{r}
library(tidyverse)
dog_choice <- data.frame(dog_name = c("Khora",
                                      "Teddy",
                                      "Waffle",
                                      "Banjo"),
                         food = c("everything",
                                  "salmon",
                                  "chicken",
                                  "pancakes"))
my_sub <- dog_choice %>%
  dplyr::filter(dog_name=="Waffle")

# dog_choice[dog_choice$dog_name == "Teddy",]  same as above

dog_menu <- function(dog_name){
  print(paste("My name is", my_sub$dog_name,"and I like to eat",my_sub$food,"."))
}

dog_menu("Waffle")

```

```{r}

calc_windpower <- function(rho, radius, windspeed) {
  
  if (windspeed > 130) {
    warning("Whoa, that's a high windspeed! Are you sure that's correct?")
  }
  
  if (rho > 1.225) {
    warning("That air density is suspicious.")
  }
  
  if (radius < 0) {
    stop("Rotor radius must be a positive value (meters).")
  }
  
  0.3*rho*pi*(radius^2)*(windspeed^3)
  
}

```

```{r}
# Let's create a data frame:


# Now let's write a function that automatically switches depth based on
gw_rate <- function(site) {
  
  if(!site %in% c("mountain", "prairie", "desert", "beach")){
    warning("site not included")
  }
  
  # Stored parameters for 4 different sites
  gw_depths <- data.frame(sitename = c("mountain", "prairie", "desert", "beach"),
                 depth = c(32, 41, 63, 2),
                 slope = c(11.2, 0.4, 0.8, 2.6))
  
  # Subset for just that site information (creates a 1-row data frame)
  site_select <- filter(gw_depths, sitename == site)
  
  # Calculate using values from that 1-row data frame
  transport_rate <- 1.4 * site_select$slope + 3.6 * site_select$depth
 
  # Return the output
  return(transport_rate)
  
}

gw_rate(site = "sea")
```

